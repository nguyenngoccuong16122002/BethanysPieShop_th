@model PaginatedList<Pie>

<form asp-action="Index" method="get">
</form>@foreach (var pie in Model)
{
    <partial name="_PieCard" model="pie" />
}


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var totalpage = Model.TotalPages;
    var pageitems = Model.PageIndex;


}
@{
    // xây dựng Func phát sinh Url từ page ./Index
    Func<int?, string> generateUrl = (int? _pagenumber) =>
    {
        return Url.Action("Index", new { pageNumber = _pagenumber });
    };

    var datapaging = new
    {
        currentPage =pageitems,    // trang hiện tại
        countPages = totalpage,   // tổng  số trang
        generateUrl = generateUrl,
        prevDisabled= prevDisabled,
        nextDisabled= nextDisabled,

    };
    
}
<partial name="_Paging" model="@datapaging" />
@*<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>*@